{"ast":null,"code":"var _jsxFileName = \"/Users/alexoei/playlist/spotify_to_apple/myapp/src/Components/source.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nclass Source extends Component {\n  //handleClick = async (e) => {\n  //}\n  render() {\n    return /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Button\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addSource: source => {\n      dispatch({\n        type: 'ADD_SOURCE'\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Source);","map":{"version":3,"sources":["/Users/alexoei/playlist/spotify_to_apple/myapp/src/Components/source.js"],"names":["React","Component","connect","Dropdown","Source","render","mapDispatchToProps","dispatch","addSource","source","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAGA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAE3B;AAOA;AAEAI,EAAAA,MAAM,GAAE;AAEJ,wBAEA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD,CAAU,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAFA;AASH;;AAtB0B;;AA2B/B,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AACFC,IAAAA,SAAS,EAAGC,MAAD,IAAW;AAACF,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AAA+B;AADpD,GAAN;AAGH,CAJD;;AAOA,eAAeR,OAAO,CAAC,IAAD,EAAOI,kBAAP,CAAP,CAAkCF,MAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n\nclass Source extends Component {\n   \n    //handleClick = async (e) => {\n       \n            \n        \n          \n        \n\n    //}\n    \n    render(){\n        \n        return(\n            \n        <Dropdown>\n            <Dropdown.Toggle>\n                Button\n            </Dropdown.Toggle>\n        </Dropdown>\n\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addSource: (source)=> {dispatch({type: 'ADD_SOURCE'})}\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(Source);"]},"metadata":{},"sourceType":"module"}