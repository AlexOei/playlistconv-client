{"ast":null,"code":"var _jsxFileName = \"/Users/alexoei/playlist/spotify_to_apple/myapp/src/Components/source.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Source extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSelect1 = e => {\n      let source = \"appleToSpotify\";\n      this.props.addSource(source);\n      let id = Math.floor(Math.random() * 100000);\n      this.props.addID(id);\n    };\n\n    this.handleSelect2 = e => {\n      let source = \"spotifyToApple\";\n      this.props.addSource(source);\n      let idA2S = Math.floor(Math.random() * 100000);\n      this.props.addIDA2S(idA2S);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"male\",\n      name: \"gender\",\n      value: \"male\",\n      onClick: this.handleSelect1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"Apple Music to Spotify\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"male\",\n      name: \"gender\",\n      value: \"female\",\n      onClick: this.handleSelect2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Spotify to Apple Music\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addSource: source => {\n      dispatch({\n        type: 'ADD_SOURCE',\n        payload: source\n      });\n    },\n    addID: id => {\n      dispatch({\n        type: 'ADD_ID',\n        payload: id\n      });\n    },\n    addIDA2S: idA2S => {\n      dispatch({\n        type: 'ADD_IDA2S',\n        payload: idA2S\n      });\n    },\n    addToken: hash => {\n      dispatch({\n        type: 'ADD_SPOTIFYTOKEN',\n        payload: hash\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Source);","map":{"version":3,"sources":["/Users/alexoei/playlist/spotify_to_apple/myapp/src/Components/source.js"],"names":["React","Component","connect","Source","handleSelect1","e","source","props","addSource","id","Math","floor","random","addID","handleSelect2","idA2S","addIDA2S","render","mapDispatchToProps","dispatch","type","payload","addToken","hash"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE3BG,aAF2B,GAEVC,CAAD,IAAM;AAClB,UAAIC,MAAM,GAAG,gBAAb;AACA,WAAKC,KAAL,CAAWC,SAAX,CAAqBF,MAArB;AACA,UAAIG,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,MAAzB,CAAT;AACA,WAAKL,KAAL,CAAWM,KAAX,CAAiBJ,EAAjB;AAEH,KAR0B;;AAAA,SAS3BK,aAT2B,GASVT,CAAD,IAAM;AAClB,UAAIC,MAAM,GAAG,gBAAb;AACA,WAAKC,KAAL,CAAWC,SAAX,CAAqBF,MAArB;AACA,UAAIS,KAAK,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,MAAzB,CAAZ;AACA,WAAKL,KAAL,CAAWS,QAAX,CAAoBD,KAApB;AAEH,KAf0B;AAAA;;AAiB3BE,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAA8B,MAAA,IAAI,EAAC,QAAnC;AAA4C,MAAA,KAAK,EAAC,MAAlD;AAAyD,MAAA,OAAO,EAAE,KAAKb,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFA,eAGA;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAA8B,MAAA,IAAI,EAAC,QAAnC;AAA4C,MAAA,KAAK,EAAC,QAAlD;AAA2D,MAAA,OAAO,EAAE,KAAKU,aAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAIA;AAAO,MAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJA,CADJ;AASH;;AA5B0B;;AAiC/B,MAAMI,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AACFX,IAAAA,SAAS,EAAGF,MAAD,IAAW;AAACa,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,YAAP;AAAqBC,QAAAA,OAAO,EAACf;AAA7B,OAAD,CAAR;AAA+C,KADpE;AAEFO,IAAAA,KAAK,EAAGJ,EAAD,IAAQ;AAACU,MAAAA,QAAQ,CAAE;AAACC,QAAAA,IAAI,EAAE,QAAP;AAAiBC,QAAAA,OAAO,EAACZ;AAAzB,OAAF,CAAR;AAAwC,KAFtD;AAGFO,IAAAA,QAAQ,EAAGD,KAAD,IAAW;AAACI,MAAAA,QAAQ,CAAE;AAACC,QAAAA,IAAI,EAAE,WAAP;AAAoBC,QAAAA,OAAO,EAACN;AAA5B,OAAF,CAAR;AAA+C,KAHnE;AAIFO,IAAAA,QAAQ,EAAGC,IAAD,IAAU;AAACJ,MAAAA,QAAQ,CAAE;AAACC,QAAAA,IAAI,EAAE,kBAAP;AAA2BC,QAAAA,OAAO,EAAEE;AAApC,OAAF,CAAR;AAAqD;AAJxE,GAAN;AAMF,CAPF;;AAYA,eAAerB,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\n\n\nclass Source extends Component {\n   \n    handleSelect1 = (e) =>{\n        let source = \"appleToSpotify\";\n        this.props.addSource(source);\n        let id = Math.floor(Math.random()*100000);\n        this.props.addID(id)\n        \n    }\n    handleSelect2 = (e) =>{\n        let source = \"spotifyToApple\";\n        this.props.addSource(source)\n        let idA2S = Math.floor(Math.random()*100000);\n        this.props.addIDA2S(idA2S)\n\n    }\n    \n    render(){\n        \n        return(\n            <div>\n            <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\" onClick={this.handleSelect1}></input>\n            <label for=\"male\" >Apple Music to Spotify</label>\n            <input type=\"radio\" id=\"male\" name=\"gender\" value=\"female\" onClick={this.handleSelect2}></input>\n            <label for=\"female\">Spotify to Apple Music</label>\n            </div>\n\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addSource: (source)=> {dispatch({type: 'ADD_SOURCE', payload:source})}, \n        addID: (id) => {dispatch ({type: 'ADD_ID', payload:id})},\n        addIDA2S: (idA2S) => {dispatch ({type: 'ADD_IDA2S', payload:idA2S })},\n        addToken: (hash) => {dispatch ({type: 'ADD_SPOTIFYTOKEN', payload: hash})}\n    }\n }\n    \n\n\n\nexport default connect(null, mapDispatchToProps)(Source);"]},"metadata":{},"sourceType":"module"}