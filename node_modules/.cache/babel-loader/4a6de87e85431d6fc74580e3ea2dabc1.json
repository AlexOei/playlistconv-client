{"ast":null,"code":"var _jsxFileName = \"/Users/alexoei/playlist-converter-source/client/src/Components/login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap/';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport apiID from '.config.json';\n\nclass AppleLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: null\n    };\n\n    this.handleClickApple = async e => {\n      let music = window.MusicKit.configure({\n        developerToken: apiID.appleAuth,\n        app: {\n          name: 'My Cool Web App'\n        },\n        declarativeMarkup: true\n      });\n      music.authorize().then(musicUserToken => {\n        this.setState({\n          login: \"Logged In!\"\n        });\n        let token = musicUserToken;\n        this.props.addToken(token);\n      });\n    };\n\n    this.handleClickSpotify = async e => {\n      const response = await fetch('http://localhost:4000/authorize', {\n        method: 'GET'\n      });\n      const data = await response.text();\n      window.location = data;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.handleClickSpotify,\n      className: \"spotify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \" Login to Spotify\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      className: \"applemusic\",\n      onClick: this.handleClickApple,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \" Login to Apple Music\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, this.state.login)));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToken: token => {\n      dispatch({\n        type: 'ADD_APPLETOKEN',\n        payload: token\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AppleLogin);","map":{"version":3,"sources":["/Users/alexoei/playlist-converter-source/client/src/Components/login.js"],"names":["React","Component","connect","Button","apiID","AppleLogin","state","login","handleClickApple","e","music","window","MusicKit","configure","developerToken","appleAuth","app","name","declarativeMarkup","authorize","then","musicUserToken","setState","token","props","addToken","handleClickSpotify","response","fetch","method","data","text","location","render","mapDispatchToProps","dispatch","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BK,KAF+B,GAEvB;AACJC,MAAAA,KAAK,EAAC;AADF,KAFuB;;AAAA,SAM/BC,gBAN+B,GAMZ,MAAOC,CAAP,IAAa;AAC5B,UAAIC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBC,SAAhB,CAA0B;AAClCC,QAAAA,cAAc,EAAEV,KAAK,CAACW,SADY;AAElCC,QAAAA,GAAG,EAAE;AACDC,UAAAA,IAAI,EAAE;AADL,SAF6B;AAKlCC,QAAAA,iBAAiB,EAAE;AALe,OAA1B,CAAZ;AAQAR,MAAAA,KAAK,CAACS,SAAN,GAAkBC,IAAlB,CAAuBC,cAAc,IAAE;AACnC,aAAKC,QAAL,CAAc;AACVf,UAAAA,KAAK,EAAC;AADI,SAAd;AAGA,YAAIgB,KAAK,GAAGF,cAAZ;AACA,aAAKG,KAAL,CAAWC,QAAX,CAAoBF,KAApB;AAEC,OAPL;AAUH,KAzB8B;;AAAA,SA2B/BG,kBA3B+B,GA2BV,MAAOjB,CAAP,IAAa;AAC9B,YAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAmC;AAC3DC,QAAAA,MAAM,EAAC;AADoD,OAAnC,CAA5B;AAGA,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACApB,MAAAA,MAAM,CAACqB,QAAP,GAAkBF,IAAlB;AAEH,KAlC8B;AAAA;;AAoC/BG,EAAAA,MAAM,GAAE;AACJ,wBAEA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,KAAKP,kBAArC;AAAyD,MAAA,SAAS,EAAE,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFA,eAGA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,SAAS,EAAC,YAAjC;AAA8C,MAAA,OAAO,EAAE,KAAKlB,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWC,KAAf,CAJA,CADJ,CAFA;AAaH;;AAlD8B;;AAuDnC,MAAM2B,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AACFV,IAAAA,QAAQ,EAAGF,KAAD,IAAW;AAACY,MAAAA,QAAQ,CAAE;AAACC,QAAAA,IAAI,EAAE,gBAAP;AAAyBC,QAAAA,OAAO,EAAEd;AAAlC,OAAF,CAAR;AAAoD;AADxE,GAAN;AAIH,CALD;;AAQA,eAAerB,OAAO,CAAC,IAAD,EAAOgC,kBAAP,CAAP,CAAkC7B,UAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap/';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport apiID from '.config.json'\n\nclass AppleLogin extends Component {\n   \n    state = {\n        login:null\n    }\n\n    handleClickApple = async (e) => {\n        let music = window.MusicKit.configure({\n            developerToken: apiID.appleAuth,\n            app: {\n                name: 'My Cool Web App'\n            },\n            declarativeMarkup: true\n            });\n\n        music.authorize().then(musicUserToken=>{\n            this.setState({\n                login:\"Logged In!\"\n            })\n            let token = musicUserToken;\n            this.props.addToken(token);\n    \n            })\n        \n\n    }\n\n    handleClickSpotify = async (e) => {\n        const response = await fetch('http://localhost:4000/authorize',{\n            method:'GET',\n        });\n        const data = await response.text()\n        window.location = data;\n\n    }\n    \n    render(){\n        return(\n            \n        <div className=\"container-login\">\n            <div className=\"text-center\">\n            <br />\n            <Button variant=\"dark\" onClick={this.handleClickSpotify} className =\"spotify\" > Login to Spotify</Button>\n            <Button variant=\"dark\" className=\"applemusic\" onClick={this.handleClickApple} > Login to Apple Music</Button>\n            <p>{this.state.login}</p>\n            </div>\n        \n        </div>\n\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addToken: (token) => {dispatch ({type: 'ADD_APPLETOKEN', payload: token})},\n       \n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(AppleLogin);"]},"metadata":{},"sourceType":"module"}