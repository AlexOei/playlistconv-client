{"ast":null,"code":"var _jsxFileName = \"/Users/alexoei/playlist/spotify_to_apple/client/src/Components/login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap/';\n\nclass AppleLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: null\n    };\n\n    this.handleClickApple = async e => {\n      let music = window.MusicKit.configure({\n        developerToken: 'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjlSR0o1OUxIQVQifQ.eyJpYXQiOjE1OTcxODg5NTksImV4cCI6MTYxMjc0MDk1OSwiaXNzIjoiQkJEMzU1UDY3MyJ9.US0Y9NvwZqjy5IS0Ugcqzl0RJc9u8i4yEsrVjBt5f8bteLd0hLGLkuR4zpl-9AsUweif13kM3Ai58hicZiXhgA',\n        app: {\n          name: 'My Cool Web App'\n        },\n        declarativeMarkup: true\n      });\n      music.authorize().then(musicUserToken => {\n        console.log(musicUserToken);\n        this.setState({\n          login: \"Logged In!\"\n        });\n        let token = musicUserToken;\n        this.props.addToken(token);\n      });\n    };\n\n    this.handleClickSpotify = async e => {\n      const response = await fetch('http://localhost:8888/authorize', {\n        method: 'GET'\n      });\n      const data = await response.text();\n      console.log(data);\n      window.location = data;\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.handleClickSpotify,\n      className: \"spotify\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \" Login to Spotify\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      className: \"applemusic\",\n      onClick: this.handleClickApple,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, \" Login to Apple Music\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }, this.state.login)));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToken: token => {\n      dispatch({\n        type: 'ADD_APPLETOKEN',\n        payload: token\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AppleLogin);","map":{"version":3,"sources":["/Users/alexoei/playlist/spotify_to_apple/client/src/Components/login.js"],"names":["React","Component","connect","Button","AppleLogin","state","login","handleClickApple","e","music","window","MusicKit","configure","developerToken","app","name","declarativeMarkup","authorize","then","musicUserToken","console","log","setState","token","props","addToken","handleClickSpotify","response","fetch","method","data","text","location","render","mapDispatchToProps","dispatch","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AAGA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BI,KAF+B,GAEvB;AACJC,MAAAA,KAAK,EAAC;AADF,KAFuB;;AAAA,SAM/BC,gBAN+B,GAMZ,MAAOC,CAAP,IAAa;AAC5B,UAAIC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBC,SAAhB,CAA0B;AAClCC,QAAAA,cAAc,EAAC,gOADmB;AAElCC,QAAAA,GAAG,EAAE;AACDC,UAAAA,IAAI,EAAE;AADL,SAF6B;AAKlCC,QAAAA,iBAAiB,EAAE;AALe,OAA1B,CAAZ;AAQAP,MAAAA,KAAK,CAACQ,SAAN,GAAkBC,IAAlB,CAAuBC,cAAc,IAAE;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,aAAKG,QAAL,CAAc;AACVhB,UAAAA,KAAK,EAAC;AADI,SAAd;AAGA,YAAIiB,KAAK,GAAGJ,cAAZ;AACA,aAAKK,KAAL,CAAWC,QAAX,CAAoBF,KAApB;AAEC,OARL;AAWH,KA1B8B;;AAAA,SA4B/BG,kBA5B+B,GA4BV,MAAOlB,CAAP,IAAa;AAC9B,YAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAmC;AAC3DC,QAAAA,MAAM,EAAC;AADoD,OAAnC,CAA5B;AAGA,YAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACApB,MAAAA,MAAM,CAACsB,QAAP,GAAkBF,IAAlB;AAEH,KApC8B;AAAA;;AAsC/BG,EAAAA,MAAM,GAAE;AACJb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAjB;AACA,wBAEA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,KAAKE,kBAArC;AAAyD,MAAA,SAAS,EAAE,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFA,eAID,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,SAAS,EAAC,YAAjC;AAA8C,MAAA,OAAO,EAAE,KAAKnB,gBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJC,eAKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWC,KAAf,CALC,CADJ,CAFA;AAgBH;;AAxD8B;;AA6DnC,MAAM4B,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AACFV,IAAAA,QAAQ,EAAGF,KAAD,IAAW;AAACY,MAAAA,QAAQ,CAAE;AAACC,QAAAA,IAAI,EAAE,gBAAP;AAAyBC,QAAAA,OAAO,EAAEd;AAAlC,OAAF,CAAR;AAAoD;AADxE,GAAN;AAIH,CALD;;AAQA,eAAerB,OAAO,CAAC,IAAD,EAAOgC,kBAAP,CAAP,CAAkC9B,UAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap/';\n\n\nclass AppleLogin extends Component {\n   \n    state = {\n        login:null\n    }\n\n    handleClickApple = async (e) => {\n        let music = window.MusicKit.configure({\n            developerToken:'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjlSR0o1OUxIQVQifQ.eyJpYXQiOjE1OTcxODg5NTksImV4cCI6MTYxMjc0MDk1OSwiaXNzIjoiQkJEMzU1UDY3MyJ9.US0Y9NvwZqjy5IS0Ugcqzl0RJc9u8i4yEsrVjBt5f8bteLd0hLGLkuR4zpl-9AsUweif13kM3Ai58hicZiXhgA',\n            app: {\n                name: 'My Cool Web App'\n            },\n            declarativeMarkup: true\n            });\n\n        music.authorize().then(musicUserToken=>{\n            console.log(musicUserToken);\n            this.setState({\n                login:\"Logged In!\"\n            })\n            let token = musicUserToken;\n            this.props.addToken(token);\n    \n            })\n        \n\n    }\n\n    handleClickSpotify = async (e) => {\n        const response = await fetch('http://localhost:8888/authorize',{\n            method:'GET',\n        });\n        const data = await response.text();\n        console.log(data);\n        window.location = data;\n\n    }\n    \n    render(){\n        console.log(this.props)\n        return(\n            \n        <div className=\"container-login\">\n            <div className=\"text-center\">\n            <br />\n            <Button variant=\"dark\" onClick={this.handleClickSpotify} className =\"spotify\" > Login to Spotify</Button>\n   \n           <Button variant=\"dark\" className=\"applemusic\" onClick={this.handleClickApple} > Login to Apple Music</Button>\n           <p>{this.state.login}</p>\n           </div>\n        \n         \n\n        </div>\n\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addToken: (token) => {dispatch ({type: 'ADD_APPLETOKEN', payload: token})},\n       \n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(AppleLogin);"]},"metadata":{},"sourceType":"module"}