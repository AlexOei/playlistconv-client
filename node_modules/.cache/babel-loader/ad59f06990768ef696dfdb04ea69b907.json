{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alexoei/playlist-converter-source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/alexoei/playlist-converter-source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/alexoei/playlist-converter-source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/alexoei/playlist-converter-source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/alexoei/playlist-converter-source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/alexoei/playlist-converter-source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/alexoei/playlist-converter-source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{Form,Button,Col,Row}from'react-bootstrap';import'./style.css';var Converter=/*#__PURE__*/function(_Component){_inherits(Converter,_Component);var _super=_createSuper(Converter);function Converter(){var _this;_classCallCheck(this,Converter);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={url:\" \",playName:null,link:null,done:null,valid:null};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.id,e.target.value));};_this.handleSubmit=function(e){e.preventDefault();var source=_this.props.source;var theSource={source:source};if(theSource.source!==\"spotifyToApple\"&&theSource.source!==\"appleToSpotify\"){_this.setState({valid:\"Please choose a source.\"});}if(theSource.source===\"appleToSpotify\"){var appleToken=_this.props.appleToken;var idA2S=_this.props.idA2S;var theid={idA2S:idA2S};var spotifyToken=_this.props.spotifyToken;var playName=_this.state.playName;var playlistURL=_this.state.url;var playlistURI;if(playlistURL===\" \"){_this.setState({done:\"Invalid ID\"});return false;}_this.setState({done:\"Converting...\",link:\" \",valid:null});if(playlistURL.includes(\"us/playlist\")){playlistURI=playlistURL.split(\"playlist/\")[1];playlistURI=playlistURI.split(\"/\")[1];}else if(playlistURL.includes(\"/playlist\")){playlistURI=playlistURL.split(\"playlist/\")[1];}else if(playlistURL.includes(\"p.\")){playlistURI=playlistURL;}else if(playlistURL.includes(\"pl.u\")){playlistURI=playlistURL;}else{_this.setState({done:\"Invalid URL\",valid:null});}var getAppleISRC=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('http://localhost:4000/getAppleISRC',{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify({'url':playlistURI,'authToken':{appleToken:appleToken},'id':theid})});case 2:response=_context.sent;return _context.abrupt(\"return\",response.json());case 4:case\"end\":return _context.stop();}}},_callee);}));return function getAppleISRC(){return _ref.apply(this,arguments);};}();var createSpotifyPlaylist=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,responseData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('http://localhost:4000/createSpotifyPlaylist',{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify({'createplaylist':playName,'authToken':{spotifyToken:spotifyToken},'id':theid})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:responseData=_context2.sent;console.log(responseData);_this.setState({done:responseData.done,link:responseData.link});case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function createSpotifyPlaylist(){return _ref2.apply(this,arguments);};}();var createplaylist=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var sendAppleISRC;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return getAppleISRC();case 2:sendAppleISRC=_context3.sent;console.log(sendAppleISRC.done);if(sendAppleISRC.done==='done'){createSpotifyPlaylist();}case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function createplaylist(){return _ref3.apply(this,arguments);};}();createplaylist();}if(theSource.source===\"spotifyToApple\"){var _appleToken=_this.props.appleToken;var _spotifyToken=_this.props.spotifyToken;var id=_this.props.id;var _theid={id:id};var _playName=_this.state.playName;var _playlistURL=_this.state.url;var _playlistURI;if(_playlistURL===\" \"){_this.setState({done:\"Invalid URL\"});console.log('why');return false;}_this.setState({done:\"Converting...\",link:\" \",valid:null});if(_playlistURL.includes(\"https://open\")){_playlistURI=_playlistURL.split(\"?\")[0];_playlistURI=_playlistURI.split(\"playlist/\")[1];}else if(_playlistURL.includes(\"open.spotify\")){_playlistURI=_playlistURL.split(\"playlist/\")[1];}else if(_playlistURL.length===22){_playlistURI=_playlistURL;}else{_this.setState({done:\"Invalid URL\"});}var sendSpotifyISRC=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch('http://localhost:4000/getSpotifyISRC',{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify({'url':_playlistURI,'authToken':{spotifyToken:_spotifyToken},'id':_theid})});case 2:response=_context4.sent;return _context4.abrupt(\"return\",response.json());case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function sendSpotifyISRC(){return _ref4.apply(this,arguments);};}();var createApplePlaylist=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var response,responseData;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch('http://localhost:4000/createApplePlaylist',{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify({'playlist':_playName,'authToken':{appleToken:_appleToken},'id':_theid})});case 2:response=_context5.sent;_context5.next=5;return response.json();case 5:responseData=_context5.sent;console.log(responseData);_this.setState({done:responseData.done,link:responseData.link});case 8:case\"end\":return _context5.stop();}}},_callee5);}));return function createApplePlaylist(){return _ref5.apply(this,arguments);};}();var _createplaylist=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var sendISRC;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return sendSpotifyISRC();case 2:sendISRC=_context6.sent;console.log(sendISRC);if(sendISRC.done==='done'){createApplePlaylist();}case 5:case\"end\":return _context6.stop();}}},_callee6);}));return function _createplaylist(){return _ref6.apply(this,arguments);};}();_createplaylist();}};return _this;}_createClass(Converter,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:5},/*#__PURE__*/React.createElement(Form.Control,{size:\"med\",type:\"text\",placeholder:\"Enter Playlist URL\",onChange:this.handleChange,id:\"url\"}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:3},/*#__PURE__*/React.createElement(Form.Control,{size:\"med\",type:\"text\",placeholder:\"Enter Name of New Playlist\",onChange:this.handleChange,id:\"playName\"}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{variant:\"dark\",type:\"submit\",onClick:this.handleSubmit,className:\"convert\"},\"Convert!\"),/*#__PURE__*/React.createElement(\"h1\",null,this.state.done),/*#__PURE__*/React.createElement(\"a\",{href:this.state.link},this.state.link),/*#__PURE__*/React.createElement(\"h1\",null,this.state.valid),/*#__PURE__*/React.createElement(\"p\",null,\"Convert your favorite playlists to and from Apple Music and Spotify!\"),/*#__PURE__*/React.createElement(\"p\",null,\"Your playlist link will appear below the convert button when completed.\"),/*#__PURE__*/React.createElement(\"p\",null,\" Note: Due to Spotify's song limit per request, conversion caps at 100 songs\"),/*#__PURE__*/React.createElement(\"p\",null,\" Note: Spotify exclusives such as Spotify singles cannot be converted\"),/*#__PURE__*/React.createElement(\"p\",null,\" Note: If you are already logged into Apple Music on your browser, a popup to login may not appear\"))));}}]);return Converter;}(Component);var mapStateToProps=function mapStateToProps(state){return{appleToken:state.appleToken,id:state.id,spotifyToken:state.spotifyToken,idA2S:state.idA2S,source:state.source};};export default connect(mapStateToProps)(Converter);","map":{"version":3,"sources":["/Users/alexoei/playlist-converter-source/client/src/Components/convert.js"],"names":["React","Component","connect","Form","Button","Col","Row","Converter","state","url","playName","link","done","valid","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","source","props","theSource","appleToken","idA2S","theid","spotifyToken","playlistURL","playlistURI","includes","split","getAppleISRC","fetch","method","headers","body","JSON","stringify","response","json","createSpotifyPlaylist","responseData","console","log","createplaylist","sendAppleISRC","length","sendSpotifyISRC","createApplePlaylist","sendISRC","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\n\nimport './style.css';\n\nclass Converter extends Component{\n    state = {\n        url: \" \",\n        playName: null,\n        link: null,\n        done: null,\n        valid: null\n    }\n    \n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => { \n        e.preventDefault();\n        const { source } = this.props;\n        const theSource = { source };\n\n        if ( theSource.source !== \"spotifyToApple\" && theSource.source !== \"appleToSpotify\"){\n            this.setState({\n                valid:\"Please choose a source.\"\n            })\n        }\n\n        if ( theSource.source === \"appleToSpotify\" ){\n           \n            const { appleToken } = this.props;\n            const { idA2S }=this.props\n            const theid = { idA2S }\n            const { spotifyToken } = this.props;\n            let playName = this.state.playName\n            let playlistURL = this.state.url\n            let playlistURI;\n            \n\n            if(playlistURL === \" \"){\n                this.setState({\n                    done:\"Invalid ID\"\n                })\n                return false;\n            }\n            this.setState({\n                done:\"Converting...\",\n                link: \" \",\n                valid: null\n            })\n\n            if (playlistURL.includes(\"us/playlist\")){\n                playlistURI = playlistURL.split(\"playlist/\")[1]\n                playlistURI=playlistURI.split(\"/\")[1]\n                \n            }\n            else if (playlistURL.includes(\"/playlist\")){\n                playlistURI=playlistURL.split(\"playlist/\")[1]\n\n            }\n            else if (playlistURL.includes(\"p.\")){\n               \n                playlistURI=playlistURL\n                \n            }\n            else if (playlistURL.includes(\"pl.u\")){\n                playlistURI=playlistURL\n            }else {\n                this.setState({\n                    done:\"Invalid URL\",\n                    valid: null\n                })\n            }\n\n\n        let getAppleISRC = async function(){\n            const response = await fetch('http://localhost:4000/getAppleISRC',{\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body:JSON.stringify({\n                    'url': playlistURI,\n                    'authToken': { appleToken },\n                    'id': theid\n                })     \n            })\n            return response.json()\n        }\n\n        let createSpotifyPlaylist =  (async()=>{\n            const response = await fetch('http://localhost:4000/createSpotifyPlaylist',{\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body:JSON.stringify({\n                    'createplaylist': playName,\n                    'authToken': {spotifyToken},\n                    'id':theid\n                })\n            })\n        \n        const responseData = await response.json()\n            console.log(responseData)\n            this.setState({\n                done:responseData.done,\n                link:responseData.link\n            })\n                \n        })\n        \n        const createplaylist = async () => {\n            const sendAppleISRC = await getAppleISRC()\n            console.log(sendAppleISRC.done)\n            if (sendAppleISRC.done === 'done'){\n                createSpotifyPlaylist()\n            }\n        }\n\n        createplaylist()\n        \n        }\n\n        if ( theSource.source ===\"spotifyToApple\"){\n\n            const { appleToken } = this.props;\n            const { spotifyToken } = this.props;\n            const { id }=this.props\n            const theid = { id }\n            let playName = this.state.playName\n            let playlistURL = this.state.url\n            let playlistURI\n\n            if(playlistURL === \" \"){\n                this.setState({\n                    done:\"Invalid URL\"\n                })\n                console.log('why')\n                return false;\n            }\n\n            this.setState({\n                done:\"Converting...\",\n                link: \" \",\n                valid: null\n            })\n\n            if (playlistURL.includes(\"https://open\")){\n               \n                playlistURI = playlistURL.split(\"?\")[0]\n                playlistURI=playlistURI.split(\"playlist/\")[1]\n            }\n            else if (playlistURL.includes(\"open.spotify\")){\n                playlistURI = playlistURL.split(\"playlist/\")[1]\n                \n            }\n            else if (playlistURL.length === 22){\n                playlistURI=playlistURL\n            }else {\n                this.setState({\n                    done:\"Invalid URL\"\n                })\n            }\n\n\n    \n            \n\n        let sendSpotifyISRC = async function(){\n            const response = await fetch('http://localhost:4000/getSpotifyISRC',{\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body:JSON.stringify({\n                    'url': playlistURI,\n                    'authToken': { spotifyToken },\n                    'id': theid\n                })\n            })   \n\n            return response.json()\n        }\n\n            \n        const createApplePlaylist = (async()=>{\n            const response = await fetch('http://localhost:4000/createApplePlaylist',{\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body:JSON.stringify({\n                    'playlist': playName,\n                    'authToken': { appleToken },\n                    'id': theid\n\n                })\n            })\n            \n            const responseData = await response.json()\n            console.log(responseData)\n            this.setState({\n                done:responseData.done,\n                link:responseData.link\n            })\n             \n        })\n\n        const createplaylist = async () => {\n            const sendISRC = await sendSpotifyISRC()\n            console.log(sendISRC)\n            if (sendISRC.done === 'done'){\n                \n                createApplePlaylist()\n            }\n        }\n        \n        createplaylist()\n\n        }\n\n        \n    }\n  \n    \n    render(){\n        \n        return(\n        \n        <Form>\n        <Form.Group>\n          <div className = \"text-center\">\n          <Row className=\"justify-content-md-center\">\n          \n          <Col xs={5} >\n          <Form.Control  size = \"med\" type = \"text\" placeholder=\"Enter Playlist URL\" onChange={this.handleChange} id=\"url\" />\n          </Col>\n          </Row>\n          <br />\n          <Row className=\"justify-content-md-center\">\n          <Col xs={3}>\n          <Form.Control  size = \"med\" type = \"text\" placeholder = \"Enter Name of New Playlist\" onChange={this.handleChange} id=\"playName\"/>\n          </Col>\n          </Row>\n          <br />\n          <Button variant=\"dark\" type=\"submit\" onClick={this.handleSubmit} className=\"convert\">Convert!</Button>\n            <h1>{this.state.done}</h1>\n            <a href = {this.state.link}>{this.state.link}</a>\n            <h1>{this.state.valid}</h1>\n            <p>Convert your favorite playlists to and from Apple Music and Spotify!</p>\n            <p>Your playlist link will appear below the convert button when completed.</p>\n           <p> Note: Due to Spotify's song limit per request, conversion caps at 100 songs</p>\n           <p> Note: Spotify exclusives such as Spotify singles cannot be converted</p>\n           <p> Note: If you are already logged into Apple Music on your browser, a popup to login may not appear</p>\n          </div>\n        </Form.Group>\n        </Form>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        appleToken: state.appleToken,\n        id: state.id,\n        spotifyToken: state.spotifyToken,\n        idA2S: state.idA2S,\n        source: state.source\n    }\n}\n\nexport default connect(mapStateToProps)(Converter);"]},"metadata":{},"sourceType":"module"}