{"ast":null,"code":"var _jsxFileName = \"/Users/alexoei/playlist/spotify_to_apple/myapp/src/Components/convert.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Converter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      url: null,\n      playName: null\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        source\n      } = this.props;\n      const theSource = {\n        source\n      };\n\n      if (theSource === \"appleToSpotify\") {\n        const {\n          appleToken\n        } = this.props; //const appleToken = { appleToken };\n\n        const {\n          idA2S\n        } = this.props;\n        const theid = {\n          idA2S\n        };\n        const {\n          spotifyToken\n        } = this.props; //const spotifyToken = { spotifyToken };\n\n        let tag = this.state.playName;\n        let playlistURI = this.state.url;\n\n        let getAppleISRC = async function () {\n          fetch('http://localhost:8888/getAppleISRC', {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              'url': playlistURI,\n              'authToken': {\n                appleToken\n              },\n              'id': theid\n            })\n          });\n        };\n\n        let createSpotifyPlaylist = async function () {\n          fetch('http://localhost:8888/spotifyplaylist', {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              'createplaylist': tag,\n              'authToken': {\n                spotifyToken\n              },\n              'id': theid\n            })\n          });\n        };\n\n        getAppleISRC().then(() => {\n          setTimeout(function () {\n            createSpotifyPlaylist();\n          }, 10000);\n        });\n      }\n\n      if (theSource === \"spotifyToApple\") {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"playName\",\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Enter Name of Your New Playlist\"), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"URL\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Enter URL of the Playlist You want to Convert\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"URL\",\n      onChange: this.handleChange,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"playName\",\n      onChange: this.handleChange,\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Convert!\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    appleToken: state.appleToken,\n    id: state.id,\n    spotifyToken: state.spotifyToken,\n    idA2S: state.idA2S,\n    source: state.source\n  };\n};\n\nexport default connect(mapStateToProps)(Converter);","map":{"version":3,"sources":["/Users/alexoei/playlist/spotify_to_apple/myapp/src/Components/convert.js"],"names":["React","Component","connect","Converter","state","url","playName","handleSubmit","e","preventDefault","source","props","theSource","appleToken","idA2S","theid","spotifyToken","tag","playlistURI","getAppleISRC","fetch","method","headers","body","JSON","stringify","createSpotifyPlaylist","then","setTimeout","render","handleChange","mapStateToProps","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Converter extends Component{\n    state = {\n        url: null,\n        playName: null,\n    }\n    handleSubmit = (e) => { \n        e.preventDefault();\n        const { source } = this.props;\n        const theSource = { source };\n        \n        if ( theSource === \"appleToSpotify\" ){\n           \n            const { appleToken } = this.props;\n            //const appleToken = { appleToken };\n            const { idA2S }=this.props\n            const theid = { idA2S }\n            const { spotifyToken } = this.props;\n            //const spotifyToken = { spotifyToken };\n            let tag = this.state.playName\n            let playlistURI = this.state.url\n\n            let getAppleISRC = async function(){\n                \n                fetch('http://localhost:8888/getAppleISRC',{\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/json'\n                    },\n                    body:JSON.stringify({\n                        'url': playlistURI,\n                        'authToken': { appleToken },\n                        'id': theid\n                    })\n                    \n                })\n            \n            }\n\n        let createSpotifyPlaylist = async function(){\n            fetch('http://localhost:8888/spotifyplaylist',{\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body:JSON.stringify({\n                    'createplaylist': tag,\n                    'authToken': {spotifyToken},\n                    'id':theid\n                })\n            })\n        }\n        \n        getAppleISRC().then(()=>{\n            setTimeout(function(){\n                createSpotifyPlaylist()\n            },10000)\n        })\n\n\n        }\n        if ( theSource ===\"spotifyToApple\"){\n\n        }\n        \n    }\n  \n    \n    render(){\n        \n        return(\n        <div>\n            <form onSubmit={this.handleSubmit}>\n            <label for=\"playName\" align=\"right\">Enter Name of Your New Playlist</label>\n            <label for=\"URL\" align=\"left\">Enter URL of the Playlist You want to Convert</label>\n            <br />\n            <input type = \"text\" id=\"URL\" onChange={this.handleChange} align=\"left\"></input>\n            <input type = \"text\" id=\"playName\" onChange={this.handleChange} align=\"right\"></input>\n            \n            <button>Convert!</button>\n            </form>\n\n        </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        appleToken: state.appleToken,\n        id: state.id,\n        spotifyToken: state.spotifyToken,\n        idA2S: state.idA2S,\n        source: state.source\n    }\n}\n\nexport default connect(mapStateToProps)(Converter);"]},"metadata":{},"sourceType":"module"}