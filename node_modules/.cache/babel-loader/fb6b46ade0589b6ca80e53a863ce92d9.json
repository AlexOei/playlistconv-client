{"ast":null,"code":"var _jsxFileName = \"/Users/alexoei/playlist/spotify_to_apple/myapp/src/Components/source.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Source extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSelect1 = e => {\n      let source = \"appleToSpotify\";\n      this.props.addSource(source);\n    };\n\n    this.handleSelect2 = e => {\n      let source = \"spotifyToApple\";\n      this.props.addSource(source);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"male\",\n      name: \"gender\",\n      value: \"male\",\n      onClick: this.handleSelect1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"Apple Music to Spotify\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"male\",\n      name: \"gender\",\n      value: \"female\",\n      onClick: this.handleSelect2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Spotify to Apple Music\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Convert!\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addSource: source => {\n      dispatch({\n        type: 'ADD_SOURCE',\n        payload: source\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Source);","map":{"version":3,"sources":["/Users/alexoei/playlist/spotify_to_apple/myapp/src/Components/source.js"],"names":["React","Component","connect","Source","handleSelect1","e","source","props","addSource","handleSelect2","render","mapDispatchToProps","dispatch","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE3BG,aAF2B,GAEVC,CAAD,IAAM;AAClB,UAAIC,MAAM,GAAG,gBAAb;AACA,WAAKC,KAAL,CAAWC,SAAX,CAAqBF,MAArB;AACH,KAL0B;;AAAA,SAM3BG,aAN2B,GAMVJ,CAAD,IAAM;AAClB,UAAIC,MAAM,GAAG,gBAAb;AACA,WAAKC,KAAL,CAAWC,SAAX,CAAqBF,MAArB;AAEH,KAV0B;AAAA;;AAY3BI,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAA8B,MAAA,IAAI,EAAC,QAAnC;AAA4C,MAAA,KAAK,EAAC,MAAlD;AAAyD,MAAA,OAAO,EAAE,KAAKN,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFA,eAGA;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAA8B,MAAA,IAAI,EAAC,QAAnC;AAA4C,MAAA,KAAK,EAAC,QAAlD;AAA2D,MAAA,OAAO,EAAE,KAAKK,aAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAIA;AAAO,MAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA,CADJ;AAWH;;AAzB0B;;AA8B/B,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAM;AACFJ,IAAAA,SAAS,EAAGF,MAAD,IAAW;AAACM,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,YAAP;AAAqBC,QAAAA,OAAO,EAACR;AAA7B,OAAD,CAAR;AAA+C;AADpE,GAAN;AAGH,CAJD;;AAOA,eAAeJ,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCR,MAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\n\n\nclass Source extends Component {\n   \n    handleSelect1 = (e) =>{\n        let source = \"appleToSpotify\";\n        this.props.addSource(source);\n    }\n    handleSelect2 = (e) =>{\n        let source = \"spotifyToApple\";\n        this.props.addSource(source)\n\n    }\n    \n    render(){\n        \n        return(\n            <div>\n            <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\" onClick={this.handleSelect1}></input>\n            <label for=\"male\" >Apple Music to Spotify</label>\n            <input type=\"radio\" id=\"male\" name=\"gender\" value=\"female\" onClick={this.handleSelect2}></input>\n            <label for=\"female\">Spotify to Apple Music</label>\n\n            <button>Convert!</button>\n            </div>\n\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addSource: (source)=> {dispatch({type: 'ADD_SOURCE', payload:source})}\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(Source);"]},"metadata":{},"sourceType":"module"}