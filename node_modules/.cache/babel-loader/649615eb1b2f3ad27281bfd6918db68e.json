{"ast":null,"code":"var _jsxFileName = \"/Users/alexoei/playlist/spotify_to_apple/myapp/src/Components/source.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonGroup, ToggleButton, Form } from 'react-bootstrap';\n\nclass Source extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSelect1 = e => {\n      var hash = document.URL;\n      hash = hash.substring(5).split(\"&\")[0].split(\"=\")[1];\n      console.log(hash);\n      this.props.addSpotifyToken(hash);\n      let source = \"appleToSpotify\";\n      this.props.addSource(source);\n      let idA2S = Math.floor(Math.random() * 100000);\n      this.props.addIDA2S(idA2S);\n      let music = window.MusicKit.configure({\n        developerToken: 'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjlSR0o1OUxIQVQifQ.eyJpYXQiOjE1OTcxODg5NTksImV4cCI6MTYxMjc0MDk1OSwiaXNzIjoiQkJEMzU1UDY3MyJ9.US0Y9NvwZqjy5IS0Ugcqzl0RJc9u8i4yEsrVjBt5f8bteLd0hLGLkuR4zpl-9AsUweif13kM3Ai58hicZiXhgA',\n        app: {\n          name: 'My Cool Web App'\n        },\n        declarativeMarkup: true\n      });\n      music.authorize().then(musicUserToken => {\n        console.log(musicUserToken);\n        let token = musicUserToken;\n        this.props.addAppleToken(token);\n      });\n    };\n\n    this.handleSelect2 = e => {\n      var hash = document.URL;\n      hash = hash.substring(5).split(\"&\")[0].split(\"=\")[1];\n      console.log(hash);\n      this.props.addSpotifyToken(hash);\n      let source = \"spotifyToApple\";\n      this.props.addSource(source);\n      let id = Math.floor(Math.random() * 100000);\n      this.props.addID(id);\n      let music = window.MusicKit.configure({\n        developerToken: 'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjlSR0o1OUxIQVQifQ.eyJpYXQiOjE1OTcxODg5NTksImV4cCI6MTYxMjc0MDk1OSwiaXNzIjoiQkJEMzU1UDY3MyJ9.US0Y9NvwZqjy5IS0Ugcqzl0RJc9u8i4yEsrVjBt5f8bteLd0hLGLkuR4zpl-9AsUweif13kM3Ai58hicZiXhgA',\n        app: {\n          name: 'My Cool Web App'\n        },\n        declarativeMarkup: true\n      });\n      music.authorize().then(musicUserToken => {\n        console.log(musicUserToken);\n        let token = musicUserToken;\n        this.props.addAppleToken(token);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Choose Source and Destination\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      type: \"checkbox\",\n      variant: \"dark\",\n      onClick: this.handleSelect1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Apple Music to Spotify\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      type: \"checkbox\",\n      variant: \"dark\",\n      onClick: this.handleSelect2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Spotify to Apple Music\")))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addSource: source => {\n      dispatch({\n        type: 'ADD_SOURCE',\n        payload: source\n      });\n    },\n    addID: id => {\n      dispatch({\n        type: 'ADD_ID',\n        payload: id\n      });\n    },\n    addIDA2S: idA2S => {\n      dispatch({\n        type: 'ADD_IDA2S',\n        payload: idA2S\n      });\n    },\n    addSpotifyToken: hash => {\n      dispatch({\n        type: 'ADD_SPOTIFYTOKEN',\n        payload: hash\n      });\n    },\n    addAppleToken: token => {\n      dispatch({\n        type: 'ADD_APPLETOKEN',\n        payload: token\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Source);","map":{"version":3,"sources":["/Users/alexoei/playlist/spotify_to_apple/myapp/src/Components/source.js"],"names":["React","Component","connect","ButtonGroup","ToggleButton","Form","Source","handleSelect1","e","hash","document","URL","substring","split","console","log","props","addSpotifyToken","source","addSource","idA2S","Math","floor","random","addIDA2S","music","window","MusicKit","configure","developerToken","app","name","declarativeMarkup","authorize","then","musicUserToken","token","addAppleToken","handleSelect2","id","addID","render","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { ButtonGroup, ToggleButton, Form } from 'react-bootstrap';\n\n\nclass Source extends Component {\n   \n    handleSelect1 = (e) =>{\n        var hash = document.URL\n        hash = hash.substring(5).split(\"&\")[0].split(\"=\")[1];\n        console.log(hash)\n        this.props.addSpotifyToken(hash)\n        let source = \"appleToSpotify\";\n        this.props.addSource(source);\n        let idA2S = Math.floor(Math.random()*100000);\n        this.props.addIDA2S(idA2S)\n        let music = window.MusicKit.configure({\n            developerToken:'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjlSR0o1OUxIQVQifQ.eyJpYXQiOjE1OTcxODg5NTksImV4cCI6MTYxMjc0MDk1OSwiaXNzIjoiQkJEMzU1UDY3MyJ9.US0Y9NvwZqjy5IS0Ugcqzl0RJc9u8i4yEsrVjBt5f8bteLd0hLGLkuR4zpl-9AsUweif13kM3Ai58hicZiXhgA',\n            app: {\n                name: 'My Cool Web App'\n            },\n            declarativeMarkup: true\n            });\n\n        music.authorize().then(musicUserToken=>{\n            console.log(musicUserToken);\n            let token = musicUserToken;\n            this.props.addAppleToken(token);\n    \n            })\n        \n        \n    }\n    handleSelect2 = (e) =>{\n        var hash = document.URL\n        hash = hash.substring(5).split(\"&\")[0].split(\"=\")[1];\n        console.log(hash)\n        this.props.addSpotifyToken(hash)\n        let source = \"spotifyToApple\";\n        this.props.addSource(source)\n        let id = Math.floor(Math.random()*100000);\n        this.props.addID(id)\n        let music = window.MusicKit.configure({\n            developerToken:'eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjlSR0o1OUxIQVQifQ.eyJpYXQiOjE1OTcxODg5NTksImV4cCI6MTYxMjc0MDk1OSwiaXNzIjoiQkJEMzU1UDY3MyJ9.US0Y9NvwZqjy5IS0Ugcqzl0RJc9u8i4yEsrVjBt5f8bteLd0hLGLkuR4zpl-9AsUweif13kM3Ai58hicZiXhgA',\n            app: {\n                name: 'My Cool Web App'\n            },\n            declarativeMarkup: true\n            });\n\n        music.authorize().then(musicUserToken=>{\n            console.log(musicUserToken);\n            let token = musicUserToken;\n            this.props.addAppleToken(token);\n    \n            })\n\n    }\n    \n    render(){\n        \n        return(\n            <Form>\n            <div className=\"text-center\">\n            <Form.Label\n            className = \"title\">Choose Source and Destination</Form.Label>\n            <br />\n            <div className=\"radio-container\" >\n            {/*<Form.Check\n            inline\n            type = \"radio\"\n            id=\"male\"\n            name=\"gender\"\n            value=\"male\"\n            onClick={this.handleSelect1}\n            className=\"sourceDest\"\n            label = \"Apple Music to Spotify\" /> \n            \n            <Form.Check \n            inline\n            type = \"radio\"\n            id=\"female\"\n            name=\"gender\"\n            value=\"female\"\n            onClick={this.handleSelect2}\n            label = \"Spotify to Apple Music\" \n            className=\"sourceDest\"\n            \n            />*/}\n            <ButtonGroup>\n            <ToggleButton type=\"checkbox\" variant=\"dark\" onClick={this.handleSelect1}>Apple Music to Spotify</ToggleButton>\n            <ToggleButton type=\"checkbox\" variant=\"dark\" onClick={this.handleSelect2}>Spotify to Apple Music</ToggleButton>\n            </ButtonGroup>\n            </div>\n            </div>\n            </Form>\n\n        )\n    }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addSource: (source)=> {dispatch({type: 'ADD_SOURCE', payload:source})}, \n        addID: (id) => {dispatch ({type: 'ADD_ID', payload:id})},\n        addIDA2S: (idA2S) => {dispatch ({type: 'ADD_IDA2S', payload:idA2S })},\n        addSpotifyToken: (hash) => {dispatch ({type: 'ADD_SPOTIFYTOKEN', payload: hash})},\n        addAppleToken: (token) => {dispatch ({type: 'ADD_APPLETOKEN', payload: token})}\n    }\n }\n    \n\n\n\nexport default connect(null, mapDispatchToProps)(Source);"]},"metadata":{},"sourceType":"module"}